name: Build and Deploy Firebase Functions

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch: # Allow manual triggering

jobs:
  build-functions:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20' # Match functions package.json engines
          cache: 'npm'

      - name: Install root dependencies
        run: npm ci

      - name: Build functions
        run: |
          npm run functions:build
          echo "✅ Functions built successfully"
          ls -la functions/lib/
        env:
          # Private Firebase environment variables (for server-side only)
          FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
          FIREBASE_CLIENT_EMAIL: ${{ secrets.FIREBASE_CLIENT_EMAIL }}
          FIREBASE_PRIVATE_KEY: ${{ secrets.FIREBASE_PRIVATE_KEY }}
          # Other required environment variables
          ENCRYPTION_KEY: ${{ secrets.ENCRYPTION_KEY }}
          TRUELAYER_CLIENT_ID: ${{ secrets.TRUELAYER_CLIENT_ID }}
          TRUELAYER_CLIENT_SECRET: ${{ secrets.TRUELAYER_CLIENT_SECRET }}
          MONZO_CLIENT_ID: ${{ secrets.MONZO_CLIENT_ID }}
          MONZO_CLIENT_SECRET: ${{ secrets.MONZO_CLIENT_SECRET }}

      - name: Verify functions build
        run: |
          if [ ! -f "functions/lib/index.js" ]; then
            echo "❌ Functions build failed - functions/lib/index.js not found"
            exit 1
          fi
          echo "✅ Functions build verified"

      - name: Setup Firebase CLI
        if: github.ref == 'refs/heads/main'
        run: |
          npm install -g firebase-tools
          firebase --version

      - name: Authenticate with Firebase
        if: github.ref == 'refs/heads/main'
        run: |
          # Create service account key file
          cat > firebase-service-account.json << EOF
          {
            "type": "service_account",
            "project_id": "${{ secrets.FIREBASE_PROJECT_ID }}",
            "private_key_id": "dummy",
            "private_key": "${{ secrets.FIREBASE_PRIVATE_KEY }}",
            "client_email": "${{ secrets.FIREBASE_CLIENT_EMAIL }}",
            "client_id": "dummy",
            "auth_uri": "https://accounts.google.com/o/oauth2/auth",
            "token_uri": "https://oauth2.googleapis.com/token",
            "auth_provider_x509_cert_url": "https://www.googleapis.com/oauth2/v1/certs",
            "client_x509_cert_url": "https://www.googleapis.com/robot/v1/metadata/x509/${{ secrets.FIREBASE_CLIENT_EMAIL }}"
          }
          EOF

          # Set up authentication
          export GOOGLE_APPLICATION_CREDENTIALS=firebase-service-account.json
          firebase use ${{ secrets.FIREBASE_PROJECT_ID }}

      - name: Deploy to Firebase Functions
        if: github.ref == 'refs/heads/main'
        run: |
          export GOOGLE_APPLICATION_CREDENTIALS=firebase-service-account.json
          firebase deploy --only functions --project ${{ secrets.FIREBASE_PROJECT_ID }}
        env:
          FIREBASE_CLIENT_EMAIL: ${{ secrets.FIREBASE_CLIENT_EMAIL }}
          FIREBASE_PRIVATE_KEY: ${{ secrets.FIREBASE_PRIVATE_KEY }}
          FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}

      - name: Cleanup
        if: github.ref == 'refs/heads/main'
        run: |
          rm -f firebase-service-account.json

      - name: Build Summary
        if: github.ref != 'refs/heads/main'
        run: |
          echo "✅ Functions build completed successfully!"
          echo "📦 Build artifacts are ready in functions/lib/"
          echo "🚀 Deployment will happen automatically when merged to main"
